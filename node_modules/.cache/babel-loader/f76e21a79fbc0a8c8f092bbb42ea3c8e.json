{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getUrl } from \"./geturl\";\n\nfunction staller(duration) {\n  return new Promise(resolve => {\n    setTimeout(resolve, duration);\n  });\n}\n\nfunction bodyify(value, type) {\n  if (value == null) {\n    return null;\n  }\n\n  if (typeof value === \"string\") {\n    return value;\n  }\n\n  if (isBytesLike(value)) {\n    if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n      try {\n        return toUtf8String(value);\n      } catch (error) {}\n\n      ;\n    }\n\n    return hexlify(value);\n  }\n\n  return value;\n} // This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\n\n\nexport function _fetchData(connection, body, processFunc) {\n  // How many times to retry in the event of a throttle\n  const attemptLimit = typeof connection === \"object\" && connection.throttleLimit != null ? connection.throttleLimit : 12;\n  logger.assertArgument(attemptLimit > 0 && attemptLimit % 1 === 0, \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n  const throttleCallback = typeof connection === \"object\" ? connection.throttleCallback : null;\n  const throttleSlotInterval = typeof connection === \"object\" && typeof connection.throttleSlotInterval === \"number\" ? connection.throttleSlotInterval : 100;\n  logger.assertArgument(throttleSlotInterval > 0 && throttleSlotInterval % 1 === 0, \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n  const headers = {};\n  let url = null; // @TODO: Allow ConnectionInfo to override some of these values\n\n  const options = {\n    method: \"GET\"\n  };\n  let allow304 = false;\n  let timeout = 2 * 60 * 1000;\n\n  if (typeof connection === \"string\") {\n    url = connection;\n  } else if (typeof connection === \"object\") {\n    if (connection == null || connection.url == null) {\n      logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n    }\n\n    url = connection.url;\n\n    if (typeof connection.timeout === \"number\" && connection.timeout > 0) {\n      timeout = connection.timeout;\n    }\n\n    if (connection.headers) {\n      for (const key in connection.headers) {\n        headers[key.toLowerCase()] = {\n          key: key,\n          value: String(connection.headers[key])\n        };\n\n        if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n          allow304 = true;\n        }\n      }\n    }\n\n    options.allowGzip = !!connection.allowGzip;\n\n    if (connection.user != null && connection.password != null) {\n      if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n        logger.throwError(\"basic authentication requires a secure https url\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"url\",\n          url: url,\n          user: connection.user,\n          password: \"[REDACTED]\"\n        });\n      }\n\n      const authorization = connection.user + \":\" + connection.password;\n      headers[\"authorization\"] = {\n        key: \"Authorization\",\n        value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n      };\n    }\n  }\n\n  if (body) {\n    options.method = \"POST\";\n    options.body = body;\n\n    if (headers[\"content-type\"] == null) {\n      headers[\"content-type\"] = {\n        key: \"Content-Type\",\n        value: \"application/octet-stream\"\n      };\n    }\n\n    if (headers[\"content-length\"] == null) {\n      headers[\"content-length\"] = {\n        key: \"Content-Length\",\n        value: String(body.length)\n      };\n    }\n  }\n\n  const flatHeaders = {};\n  Object.keys(headers).forEach(key => {\n    const header = headers[key];\n    flatHeaders[header.key] = header.value;\n  });\n  options.headers = flatHeaders;\n\n  const runningTimeout = function () {\n    let timer = null;\n    const promise = new Promise(function (resolve, reject) {\n      if (timeout) {\n        timer = setTimeout(() => {\n          if (timer == null) {\n            return;\n          }\n\n          timer = null;\n          reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            timeout: timeout,\n            url: url\n          }));\n        }, timeout);\n      }\n    });\n\n    const cancel = function () {\n      if (timer == null) {\n        return;\n      }\n\n      clearTimeout(timer);\n      timer = null;\n    };\n\n    return {\n      promise,\n      cancel\n    };\n  }();\n\n  const runningFetch = function () {\n    return __awaiter(this, void 0, void 0, function* () {\n      for (let attempt = 0; attempt < attemptLimit; attempt++) {\n        let response = null;\n\n        try {\n          response = yield getUrl(url, options); // Exponential back-off throttling\n\n          if (response.statusCode === 429 && attempt < attemptLimit) {\n            let tryAgain = true;\n\n            if (throttleCallback) {\n              tryAgain = yield throttleCallback(attempt, url);\n            }\n\n            if (tryAgain) {\n              let stall = 0;\n              const retryAfter = response.headers[\"retry-after\"];\n\n              if (typeof retryAfter === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                stall = parseInt(retryAfter) * 1000;\n              } else {\n                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n              } //console.log(\"Stalling 429\");\n\n\n              yield staller(stall);\n              continue;\n            }\n          }\n        } catch (error) {\n          response = error.response;\n\n          if (response == null) {\n            runningTimeout.cancel();\n            logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n              requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n              requestMethod: options.method,\n              serverError: error,\n              url: url\n            });\n          }\n        }\n\n        let body = response.body;\n\n        if (allow304 && response.statusCode === 304) {\n          body = null;\n        } else if (response.statusCode < 200 || response.statusCode >= 300) {\n          runningTimeout.cancel();\n          logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n            status: response.statusCode,\n            headers: response.headers,\n            body: bodyify(body, response.headers ? response.headers[\"content-type\"] : null),\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n          });\n        }\n\n        if (processFunc) {\n          try {\n            const result = yield processFunc(body, response);\n            runningTimeout.cancel();\n            return result;\n          } catch (error) {\n            // Allow the processFunc to trigger a throttle\n            if (error.throttleRetry && attempt < attemptLimit) {\n              let tryAgain = true;\n\n              if (throttleCallback) {\n                tryAgain = yield throttleCallback(attempt, url);\n              }\n\n              if (tryAgain) {\n                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt))); //console.log(\"Stalling callback\");\n\n                yield staller(timeout);\n                continue;\n              }\n            }\n\n            runningTimeout.cancel();\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n              body: bodyify(body, response.headers ? response.headers[\"content-type\"] : null),\n              error: error,\n              requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n              requestMethod: options.method,\n              url: url\n            });\n          }\n        }\n\n        runningTimeout.cancel(); // If we had a processFunc, it either returned a T or threw above.\n        // The \"body\" is now a Uint8Array.\n\n        return body;\n      }\n\n      return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n        requestMethod: options.method,\n        url: url\n      });\n    });\n  }();\n\n  return Promise.race([runningTimeout.promise, runningFetch]);\n}\nexport function fetchJson(connection, json, processFunc) {\n  let processJsonFunc = (value, response) => {\n    let result = null;\n\n    if (value != null) {\n      try {\n        result = JSON.parse(toUtf8String(value));\n      } catch (error) {\n        logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n          body: value,\n          error: error\n        });\n      }\n    }\n\n    if (processFunc) {\n      result = processFunc(result, response);\n    }\n\n    return result;\n  }; // If we have json to send, we must\n  // - add content-type of application/json (unless already overridden)\n  // - convert the json to bytes\n\n\n  let body = null;\n\n  if (json != null) {\n    body = toUtf8Bytes(json); // Create a connection with the content-type set for JSON\n\n    const updated = typeof connection === \"string\" ? {\n      url: connection\n    } : shallowCopy(connection);\n\n    if (updated.headers) {\n      const hasContentType = Object.keys(updated.headers).filter(k => k.toLowerCase() === \"content-type\").length !== 0;\n\n      if (!hasContentType) {\n        updated.headers = shallowCopy(updated.headers);\n        updated.headers[\"content-type\"] = \"application/json\";\n      }\n    } else {\n      updated.headers = {\n        \"content-type\": \"application/json\"\n      };\n    }\n\n    connection = updated;\n  }\n\n  return _fetchData(connection, body, processJsonFunc);\n}\nexport function poll(func, options) {\n  if (!options) {\n    options = {};\n  }\n\n  options = shallowCopy(options);\n\n  if (options.floor == null) {\n    options.floor = 0;\n  }\n\n  if (options.ceiling == null) {\n    options.ceiling = 10000;\n  }\n\n  if (options.interval == null) {\n    options.interval = 250;\n  }\n\n  return new Promise(function (resolve, reject) {\n    let timer = null;\n    let done = false; // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n\n    const cancel = () => {\n      if (done) {\n        return false;\n      }\n\n      done = true;\n\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      return true;\n    };\n\n    if (options.timeout) {\n      timer = setTimeout(() => {\n        if (cancel()) {\n          reject(new Error(\"timeout\"));\n        }\n      }, options.timeout);\n    }\n\n    const retryLimit = options.retryLimit;\n    let attempt = 0;\n\n    function check() {\n      return func().then(function (result) {\n        // If we have a result, or are allowed null then we're done\n        if (result !== undefined) {\n          if (cancel()) {\n            resolve(result);\n          }\n        } else if (options.oncePoll) {\n          options.oncePoll.once(\"poll\", check);\n        } else if (options.onceBlock) {\n          options.onceBlock.once(\"block\", check); // Otherwise, exponential back-off (up to 10s) our next request\n        } else if (!done) {\n          attempt++;\n\n          if (attempt > retryLimit) {\n            if (cancel()) {\n              reject(new Error(\"retry limit reached\"));\n            }\n\n            return;\n          }\n\n          let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n\n          if (timeout < options.floor) {\n            timeout = options.floor;\n          }\n\n          if (timeout > options.ceiling) {\n            timeout = options.ceiling;\n          }\n\n          setTimeout(check, timeout);\n        }\n\n        return null;\n      }, function (error) {\n        if (cancel()) {\n          reject(error);\n        }\n      });\n    }\n\n    check();\n  });\n}","map":{"version":3,"mappings":"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","names":["encode","base64Encode","hexlify","isBytesLike","shallowCopy","toUtf8Bytes","toUtf8String","Logger","version","logger","getUrl","staller","duration","Promise","resolve","setTimeout","bodyify","value","type","split","trim","error","_fetchData","connection","body","processFunc","attemptLimit","throttleLimit","assertArgument","throttleCallback","throttleSlotInterval","headers","url","options","method","allow304","timeout","throwArgumentError","key","toLowerCase","String","indexOf","allowGzip","user","password","substring","allowInsecureAuthentication","throwError","errors","INVALID_ARGUMENT","argument","authorization","length","flatHeaders","Object","keys","forEach","header","runningTimeout","timer","promise","reject","makeError","TIMEOUT","requestBody","requestMethod","cancel","clearTimeout","runningFetch","attempt","response","statusCode","tryAgain","stall","retryAfter","match","parseInt","Math","random","pow","SERVER_ERROR","serverError","status","result","throttleRetry","race","fetchJson","json","processJsonFunc","JSON","parse","updated","hasContentType","filter","k","poll","func","floor","ceiling","interval","done","Error","retryLimit","check","then","undefined","oncePoll","once","onceBlock"],"sourceRoot":"","sources":["../src.ts/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { checkResultErrors, Indexed, Interface } from \"@ethersproject/abi\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n; ///////////////////////////////\n\nconst allowedTransactionKeys = {\n  chainId: true,\n  data: true,\n  from: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true,\n  type: true,\n  accessList: true,\n  maxFeePerGas: true,\n  maxPriorityFeePerGas: true,\n  customData: true\n};\n\nfunction resolveName(resolver, nameOrPromise) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const name = yield nameOrPromise;\n\n    if (typeof name !== \"string\") {\n      logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n    } // If it is already an address, just use it (after adding checksum)\n\n\n    try {\n      return getAddress(name);\n    } catch (error) {}\n\n    if (!resolver) {\n      logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"resolveName\"\n      });\n    }\n\n    const address = yield resolver.resolveName(name);\n\n    if (address == null) {\n      logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n    }\n\n    return address;\n  });\n} // Recursively replaces ENS names with promises to resolve the name and resolves all properties\n\n\nfunction resolveAddresses(resolver, value, paramType) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (Array.isArray(paramType)) {\n      return yield Promise.all(paramType.map((paramType, index) => {\n        return resolveAddresses(resolver, Array.isArray(value) ? value[index] : value[paramType.name], paramType);\n      }));\n    }\n\n    if (paramType.type === \"address\") {\n      return yield resolveName(resolver, value);\n    }\n\n    if (paramType.type === \"tuple\") {\n      return yield resolveAddresses(resolver, value, paramType.components);\n    }\n\n    if (paramType.baseType === \"array\") {\n      if (!Array.isArray(value)) {\n        return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"value\",\n          value\n        }));\n      }\n\n      return yield Promise.all(value.map(v => resolveAddresses(resolver, v, paramType.arrayChildren)));\n    }\n\n    return value;\n  });\n}\n\nfunction populateTransaction(contract, fragment, args) {\n  return __awaiter(this, void 0, void 0, function* () {\n    // If an extra argument is given, it is overrides\n    let overrides = {};\n\n    if (args.length === fragment.inputs.length + 1 && typeof args[args.length - 1] === \"object\") {\n      overrides = shallowCopy(args.pop());\n    } // Make sure the parameter count matches\n\n\n    logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\"); // Populate \"from\" override (allow promises)\n\n    if (contract.signer) {\n      if (overrides.from) {\n        // Contracts with a Signer are from the Signer's frame-of-reference;\n        // but we allow overriding \"from\" if it matches the signer\n        overrides.from = resolveProperties({\n          override: resolveName(contract.signer, overrides.from),\n          signer: contract.signer.getAddress()\n        }).then(check => __awaiter(this, void 0, void 0, function* () {\n          if (getAddress(check.signer) !== check.override) {\n            logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n              operation: \"overrides.from\"\n            });\n          }\n\n          return check.override;\n        }));\n      } else {\n        overrides.from = contract.signer.getAddress();\n      }\n    } else if (overrides.from) {\n      overrides.from = resolveName(contract.provider, overrides.from); //} else {\n      // Contracts without a signer can override \"from\", and if\n      // unspecified the zero address is used\n      //overrides.from = AddressZero;\n    } // Wait for all dependencies to be resolved (prefer the signer over the provider)\n\n\n    const resolved = yield resolveProperties({\n      args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n      address: contract.resolvedAddress,\n      overrides: resolveProperties(overrides) || {}\n    }); // The ABI coded transaction\n\n    const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n    const tx = {\n      data: data,\n      to: resolved.address\n    }; // Resolved Overrides\n\n    const ro = resolved.overrides; // Populate simple overrides\n\n    if (ro.nonce != null) {\n      tx.nonce = BigNumber.from(ro.nonce).toNumber();\n    }\n\n    if (ro.gasLimit != null) {\n      tx.gasLimit = BigNumber.from(ro.gasLimit);\n    }\n\n    if (ro.gasPrice != null) {\n      tx.gasPrice = BigNumber.from(ro.gasPrice);\n    }\n\n    if (ro.maxFeePerGas != null) {\n      tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas);\n    }\n\n    if (ro.maxPriorityFeePerGas != null) {\n      tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas);\n    }\n\n    if (ro.from != null) {\n      tx.from = ro.from;\n    }\n\n    if (ro.type != null) {\n      tx.type = ro.type;\n    }\n\n    if (ro.accessList != null) {\n      tx.accessList = accessListify(ro.accessList);\n    } // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n\n\n    if (tx.gasLimit == null && fragment.gas != null) {\n      // Compute the intrinsic gas cost for this transaction\n      // @TODO: This is based on the yellow paper as of Petersburg; this is something\n      // we may wish to parameterize in v6 as part of the Network object. Since this\n      // is always a non-nil to address, we can ignore G_create, but may wish to add\n      // similar logic to the ContractFactory.\n      let intrinsic = 21000;\n      const bytes = arrayify(data);\n\n      for (let i = 0; i < bytes.length; i++) {\n        intrinsic += 4;\n\n        if (bytes[i]) {\n          intrinsic += 64;\n        }\n      }\n\n      tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n    } // Populate \"value\" override\n\n\n    if (ro.value) {\n      const roValue = BigNumber.from(ro.value);\n\n      if (!roValue.isZero() && !fragment.payable) {\n        logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"overrides.value\",\n          value: overrides.value\n        });\n      }\n\n      tx.value = roValue;\n    }\n\n    if (ro.customData) {\n      tx.customData = shallowCopy(ro.customData);\n    } // Remove the overrides\n\n\n    delete overrides.nonce;\n    delete overrides.gasLimit;\n    delete overrides.gasPrice;\n    delete overrides.from;\n    delete overrides.value;\n    delete overrides.type;\n    delete overrides.accessList;\n    delete overrides.maxFeePerGas;\n    delete overrides.maxPriorityFeePerGas;\n    delete overrides.customData; // Make sure there are no stray overrides, which may indicate a\n    // typo or using an unsupported key.\n\n    const leftovers = Object.keys(overrides).filter(key => overrides[key] != null);\n\n    if (leftovers.length) {\n      logger.throwError(`cannot override ${leftovers.map(l => JSON.stringify(l)).join(\",\")}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"overrides\",\n        overrides: leftovers\n      });\n    }\n\n    return tx;\n  });\n}\n\nfunction buildPopulate(contract, fragment) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return populateTransaction(contract, fragment, args);\n  };\n}\n\nfunction buildEstimate(contract, fragment) {\n  const signerOrProvider = contract.signer || contract.provider;\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!signerOrProvider) {\n        logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"estimateGas\"\n        });\n      }\n\n      const tx = yield populateTransaction(contract, fragment, args);\n      return yield signerOrProvider.estimateGas(tx);\n    });\n  };\n}\n\nfunction addContractWait(contract, tx) {\n  const wait = tx.wait.bind(tx);\n\n  tx.wait = confirmations => {\n    return wait(confirmations).then(receipt => {\n      receipt.events = receipt.logs.map(log => {\n        let event = deepCopy(log);\n        let parsed = null;\n\n        try {\n          parsed = contract.interface.parseLog(log);\n        } catch (e) {} // Successfully parsed the event log; include it\n\n\n        if (parsed) {\n          event.args = parsed.args;\n\n          event.decode = (data, topics) => {\n            return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n          };\n\n          event.event = parsed.name;\n          event.eventSignature = parsed.signature;\n        } // Useful operations\n\n\n        event.removeListener = () => {\n          return contract.provider;\n        };\n\n        event.getBlock = () => {\n          return contract.provider.getBlock(receipt.blockHash);\n        };\n\n        event.getTransaction = () => {\n          return contract.provider.getTransaction(receipt.transactionHash);\n        };\n\n        event.getTransactionReceipt = () => {\n          return Promise.resolve(receipt);\n        };\n\n        return event;\n      });\n      return receipt;\n    });\n  };\n}\n\nfunction buildCall(contract, fragment, collapseSimple) {\n  const signerOrProvider = contract.signer || contract.provider;\n  return function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return __awaiter(this, void 0, void 0, function* () {\n      // Extract the \"blockTag\" override if present\n      let blockTag = undefined;\n\n      if (args.length === fragment.inputs.length + 1 && typeof args[args.length - 1] === \"object\") {\n        const overrides = shallowCopy(args.pop());\n\n        if (overrides.blockTag != null) {\n          blockTag = yield overrides.blockTag;\n        }\n\n        delete overrides.blockTag;\n        args.push(overrides);\n      } // If the contract was just deployed, wait until it is mined\n\n\n      if (contract.deployTransaction != null) {\n        yield contract._deployed(blockTag);\n      } // Call a node and get the result\n\n\n      const tx = yield populateTransaction(contract, fragment, args);\n      const result = yield signerOrProvider.call(tx, blockTag);\n\n      try {\n        let value = contract.interface.decodeFunctionResult(fragment, result);\n\n        if (collapseSimple && fragment.outputs.length === 1) {\n          value = value[0];\n        }\n\n        return value;\n      } catch (error) {\n        if (error.code === Logger.errors.CALL_EXCEPTION) {\n          error.address = contract.address;\n          error.args = args;\n          error.transaction = tx;\n        }\n\n        throw error;\n      }\n    });\n  };\n}\n\nfunction buildSend(contract, fragment) {\n  return function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!contract.signer) {\n        logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"sendTransaction\"\n        });\n      } // If the contract was just deployed, wait until it is mined\n\n\n      if (contract.deployTransaction != null) {\n        yield contract._deployed();\n      }\n\n      const txRequest = yield populateTransaction(contract, fragment, args);\n      const tx = yield contract.signer.sendTransaction(txRequest); // Tweak the tx.wait so the receipt has extra properties\n\n      addContractWait(contract, tx);\n      return tx;\n    });\n  };\n}\n\nfunction buildDefault(contract, fragment, collapseSimple) {\n  if (fragment.constant) {\n    return buildCall(contract, fragment, collapseSimple);\n  }\n\n  return buildSend(contract, fragment);\n}\n\nfunction getEventTag(filter) {\n  if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n    return \"*\";\n  }\n\n  return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map(topic => {\n    if (Array.isArray(topic)) {\n      return topic.join(\"|\");\n    }\n\n    return topic;\n  }).join(\":\") : \"\");\n}\n\nclass RunningEvent {\n  constructor(tag, filter) {\n    defineReadOnly(this, \"tag\", tag);\n    defineReadOnly(this, \"filter\", filter);\n    this._listeners = [];\n  }\n\n  addListener(listener, once) {\n    this._listeners.push({\n      listener: listener,\n      once: once\n    });\n  }\n\n  removeListener(listener) {\n    let done = false;\n    this._listeners = this._listeners.filter(item => {\n      if (done || item.listener !== listener) {\n        return true;\n      }\n\n      done = true;\n      return false;\n    });\n  }\n\n  removeAllListeners() {\n    this._listeners = [];\n  }\n\n  listeners() {\n    return this._listeners.map(i => i.listener);\n  }\n\n  listenerCount() {\n    return this._listeners.length;\n  }\n\n  run(args) {\n    const listenerCount = this.listenerCount();\n    this._listeners = this._listeners.filter(item => {\n      const argsCopy = args.slice(); // Call the callback in the next event loop\n\n      setTimeout(() => {\n        item.listener.apply(this, argsCopy);\n      }, 0); // Reschedule it if it not \"once\"\n\n      return !item.once;\n    });\n    return listenerCount;\n  }\n\n  prepareEvent(event) {} // Returns the array that will be applied to an emit\n\n\n  getEmit(event) {\n    return [event];\n  }\n\n}\n\nclass ErrorRunningEvent extends RunningEvent {\n  constructor() {\n    super(\"error\", null);\n  }\n\n} // @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\n\n\nclass FragmentRunningEvent extends RunningEvent {\n  constructor(address, contractInterface, fragment, topics) {\n    const filter = {\n      address: address\n    };\n    let topic = contractInterface.getEventTopic(fragment);\n\n    if (topics) {\n      if (topic !== topics[0]) {\n        logger.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n      }\n\n      filter.topics = topics.slice();\n    } else {\n      filter.topics = [topic];\n    }\n\n    super(getEventTag(filter), filter);\n    defineReadOnly(this, \"address\", address);\n    defineReadOnly(this, \"interface\", contractInterface);\n    defineReadOnly(this, \"fragment\", fragment);\n  }\n\n  prepareEvent(event) {\n    super.prepareEvent(event);\n    event.event = this.fragment.name;\n    event.eventSignature = this.fragment.format();\n\n    event.decode = (data, topics) => {\n      return this.interface.decodeEventLog(this.fragment, data, topics);\n    };\n\n    try {\n      event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n    } catch (error) {\n      event.args = null;\n      event.decodeError = error;\n    }\n  }\n\n  getEmit(event) {\n    const errors = checkResultErrors(event.args);\n\n    if (errors.length) {\n      throw errors[0].error;\n    }\n\n    const args = (event.args || []).slice();\n    args.push(event);\n    return args;\n  }\n\n} // A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\n\n\nclass WildcardRunningEvent extends RunningEvent {\n  constructor(address, contractInterface) {\n    super(\"*\", {\n      address: address\n    });\n    defineReadOnly(this, \"address\", address);\n    defineReadOnly(this, \"interface\", contractInterface);\n  }\n\n  prepareEvent(event) {\n    super.prepareEvent(event);\n\n    try {\n      const parsed = this.interface.parseLog(event);\n      event.event = parsed.name;\n      event.eventSignature = parsed.signature;\n\n      event.decode = (data, topics) => {\n        return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n      };\n\n      event.args = parsed.args;\n    } catch (error) {// No matching event\n    }\n  }\n\n}\n\nexport class BaseContract {\n  constructor(addressOrName, contractInterface, signerOrProvider) {\n    var _this = this;\n\n    logger.checkNew(new.target, Contract); // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n    //address = getAddress(address);\n\n    defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n\n    if (signerOrProvider == null) {\n      defineReadOnly(this, \"provider\", null);\n      defineReadOnly(this, \"signer\", null);\n    } else if (Signer.isSigner(signerOrProvider)) {\n      defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n      defineReadOnly(this, \"signer\", signerOrProvider);\n    } else if (Provider.isProvider(signerOrProvider)) {\n      defineReadOnly(this, \"provider\", signerOrProvider);\n      defineReadOnly(this, \"signer\", null);\n    } else {\n      logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n    }\n\n    defineReadOnly(this, \"callStatic\", {});\n    defineReadOnly(this, \"estimateGas\", {});\n    defineReadOnly(this, \"functions\", {});\n    defineReadOnly(this, \"populateTransaction\", {});\n    defineReadOnly(this, \"filters\", {});\n    {\n      const uniqueFilters = {};\n      Object.keys(this.interface.events).forEach(eventSignature => {\n        const event = this.interface.events[eventSignature];\n        defineReadOnly(this.filters, eventSignature, function () {\n          for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n            args[_key5] = arguments[_key5];\n          }\n\n          return {\n            address: _this.address,\n            topics: _this.interface.encodeFilterTopics(event, args)\n          };\n        });\n\n        if (!uniqueFilters[event.name]) {\n          uniqueFilters[event.name] = [];\n        }\n\n        uniqueFilters[event.name].push(eventSignature);\n      });\n      Object.keys(uniqueFilters).forEach(name => {\n        const filters = uniqueFilters[name];\n\n        if (filters.length === 1) {\n          defineReadOnly(this.filters, name, this.filters[filters[0]]);\n        } else {\n          logger.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n        }\n      });\n    }\n    defineReadOnly(this, \"_runningEvents\", {});\n    defineReadOnly(this, \"_wrappedEmits\", {});\n\n    if (addressOrName == null) {\n      logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n    }\n\n    defineReadOnly(this, \"address\", addressOrName);\n\n    if (this.provider) {\n      defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n    } else {\n      try {\n        defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n      } catch (error) {\n        // Without a provider, we cannot use ENS names\n        logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"new Contract\"\n        });\n      }\n    }\n\n    const uniqueNames = {};\n    const uniqueSignatures = {};\n    Object.keys(this.interface.functions).forEach(signature => {\n      const fragment = this.interface.functions[signature]; // Check that the signature is unique; if not the ABI generation has\n      // not been cleaned or may be incorrectly generated\n\n      if (uniqueSignatures[signature]) {\n        logger.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);\n        return;\n      }\n\n      uniqueSignatures[signature] = true; // Track unique names; we only expose bare named functions if they\n      // are ambiguous\n\n      {\n        const name = fragment.name;\n\n        if (!uniqueNames[`%${name}`]) {\n          uniqueNames[`%${name}`] = [];\n        }\n\n        uniqueNames[`%${name}`].push(signature);\n      }\n\n      if (this[signature] == null) {\n        defineReadOnly(this, signature, buildDefault(this, fragment, true));\n      } // We do not collapse simple calls on this bucket, which allows\n      // frameworks to safely use this without introspection as well as\n      // allows decoding error recovery.\n\n\n      if (this.functions[signature] == null) {\n        defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n      }\n\n      if (this.callStatic[signature] == null) {\n        defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n      }\n\n      if (this.populateTransaction[signature] == null) {\n        defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n      }\n\n      if (this.estimateGas[signature] == null) {\n        defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n      }\n    });\n    Object.keys(uniqueNames).forEach(name => {\n      // Ambiguous names to not get attached as bare names\n      const signatures = uniqueNames[name];\n\n      if (signatures.length > 1) {\n        return;\n      } // Strip off the leading \"%\" used for prototype protection\n\n\n      name = name.substring(1);\n      const signature = signatures[0]; // If overwriting a member property that is null, swallow the error\n\n      try {\n        if (this[name] == null) {\n          defineReadOnly(this, name, this[signature]);\n        }\n      } catch (e) {}\n\n      if (this.functions[name] == null) {\n        defineReadOnly(this.functions, name, this.functions[signature]);\n      }\n\n      if (this.callStatic[name] == null) {\n        defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n      }\n\n      if (this.populateTransaction[name] == null) {\n        defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n      }\n\n      if (this.estimateGas[name] == null) {\n        defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n      }\n    });\n  }\n\n  static getContractAddress(transaction) {\n    return getContractAddress(transaction);\n  }\n\n  static getInterface(contractInterface) {\n    if (Interface.isInterface(contractInterface)) {\n      return contractInterface;\n    }\n\n    return new Interface(contractInterface);\n  } // @TODO: Allow timeout?\n\n\n  deployed() {\n    return this._deployed();\n  }\n\n  _deployed(blockTag) {\n    if (!this._deployedPromise) {\n      // If we were just deployed, we know the transaction we should occur in\n      if (this.deployTransaction) {\n        this._deployedPromise = this.deployTransaction.wait().then(() => {\n          return this;\n        });\n      } else {\n        // @TODO: Once we allow a timeout to be passed in, we will wait\n        // up to that many blocks for getCode\n        // Otherwise, poll for our code to be deployed\n        this._deployedPromise = this.provider.getCode(this.address, blockTag).then(code => {\n          if (code === \"0x\") {\n            logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n              contractAddress: this.address,\n              operation: \"getDeployed\"\n            });\n          }\n\n          return this;\n        });\n      }\n    }\n\n    return this._deployedPromise;\n  } // @TODO:\n  // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n  // @TODO:\n  // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n\n\n  fallback(overrides) {\n    if (!this.signer) {\n      logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"sendTransaction(fallback)\"\n      });\n    }\n\n    const tx = shallowCopy(overrides || {});\n    [\"from\", \"to\"].forEach(function (key) {\n      if (tx[key] == null) {\n        return;\n      }\n\n      logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: key\n      });\n    });\n    tx.to = this.resolvedAddress;\n    return this.deployed().then(() => {\n      return this.signer.sendTransaction(tx);\n    });\n  } // Reconnect to a different signer or provider\n\n\n  connect(signerOrProvider) {\n    if (typeof signerOrProvider === \"string\") {\n      signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n    }\n\n    const contract = new this.constructor(this.address, this.interface, signerOrProvider);\n\n    if (this.deployTransaction) {\n      defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n    }\n\n    return contract;\n  } // Re-attach to a different on-chain instance of this contract\n\n\n  attach(addressOrName) {\n    return new this.constructor(addressOrName, this.interface, this.signer || this.provider);\n  }\n\n  static isIndexed(value) {\n    return Indexed.isIndexed(value);\n  }\n\n  _normalizeRunningEvent(runningEvent) {\n    // Already have an instance of this event running; we can re-use it\n    if (this._runningEvents[runningEvent.tag]) {\n      return this._runningEvents[runningEvent.tag];\n    }\n\n    return runningEvent;\n  }\n\n  _getRunningEvent(eventName) {\n    if (typeof eventName === \"string\") {\n      // Listen for \"error\" events (if your contract has an error event, include\n      // the full signature to bypass this special event keyword)\n      if (eventName === \"error\") {\n        return this._normalizeRunningEvent(new ErrorRunningEvent());\n      } // Listen for any event that is registered\n\n\n      if (eventName === \"event\") {\n        return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n      } // Listen for any event\n\n\n      if (eventName === \"*\") {\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n      } // Get the event Fragment (throws if ambiguous/unknown event)\n\n\n      const fragment = this.interface.getEvent(eventName);\n      return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n    } // We have topics to filter by...\n\n\n    if (eventName.topics && eventName.topics.length > 0) {\n      // Is it a known topichash? (throws if no matching topichash)\n      try {\n        const topic = eventName.topics[0];\n\n        if (typeof topic !== \"string\") {\n          throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n        }\n\n        const fragment = this.interface.getEvent(topic);\n        return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n      } catch (error) {} // Filter by the unknown topichash\n\n\n      const filter = {\n        address: this.address,\n        topics: eventName.topics\n      };\n      return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n    }\n\n    return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n  }\n\n  _checkRunningEvents(runningEvent) {\n    if (runningEvent.listenerCount() === 0) {\n      delete this._runningEvents[runningEvent.tag]; // If we have a poller for this, remove it\n\n      const emit = this._wrappedEmits[runningEvent.tag];\n\n      if (emit && runningEvent.filter) {\n        this.provider.off(runningEvent.filter, emit);\n        delete this._wrappedEmits[runningEvent.tag];\n      }\n    }\n  } // Subclasses can override this to gracefully recover\n  // from parse errors if they wish\n\n\n  _wrapEvent(runningEvent, log, listener) {\n    const event = deepCopy(log);\n\n    event.removeListener = () => {\n      if (!listener) {\n        return;\n      }\n\n      runningEvent.removeListener(listener);\n\n      this._checkRunningEvents(runningEvent);\n    };\n\n    event.getBlock = () => {\n      return this.provider.getBlock(log.blockHash);\n    };\n\n    event.getTransaction = () => {\n      return this.provider.getTransaction(log.transactionHash);\n    };\n\n    event.getTransactionReceipt = () => {\n      return this.provider.getTransactionReceipt(log.transactionHash);\n    }; // This may throw if the topics and data mismatch the signature\n\n\n    runningEvent.prepareEvent(event);\n    return event;\n  }\n\n  _addEventListener(runningEvent, listener, once) {\n    if (!this.provider) {\n      logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"once\"\n      });\n    }\n\n    runningEvent.addListener(listener, once); // Track this running event and its listeners (may already be there; but no hard in updating)\n\n    this._runningEvents[runningEvent.tag] = runningEvent; // If we are not polling the provider, start polling\n\n    if (!this._wrappedEmits[runningEvent.tag]) {\n      const wrappedEmit = log => {\n        let event = this._wrapEvent(runningEvent, log, listener); // Try to emit the result for the parameterized event...\n\n\n        if (event.decodeError == null) {\n          try {\n            const args = runningEvent.getEmit(event);\n            this.emit(runningEvent.filter, ...args);\n          } catch (error) {\n            event.decodeError = error.error;\n          }\n        } // Always emit \"event\" for fragment-base events\n\n\n        if (runningEvent.filter != null) {\n          this.emit(\"event\", event);\n        } // Emit \"error\" if there was an error\n\n\n        if (event.decodeError != null) {\n          this.emit(\"error\", event.decodeError, event);\n        }\n      };\n\n      this._wrappedEmits[runningEvent.tag] = wrappedEmit; // Special events, like \"error\" do not have a filter\n\n      if (runningEvent.filter != null) {\n        this.provider.on(runningEvent.filter, wrappedEmit);\n      }\n    }\n  }\n\n  queryFilter(event, fromBlockOrBlockhash, toBlock) {\n    const runningEvent = this._getRunningEvent(event);\n\n    const filter = shallowCopy(runningEvent.filter);\n\n    if (typeof fromBlockOrBlockhash === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n      if (toBlock != null) {\n        logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n      }\n\n      filter.blockHash = fromBlockOrBlockhash;\n    } else {\n      filter.fromBlock = fromBlockOrBlockhash != null ? fromBlockOrBlockhash : 0;\n      filter.toBlock = toBlock != null ? toBlock : \"latest\";\n    }\n\n    return this.provider.getLogs(filter).then(logs => {\n      return logs.map(log => this._wrapEvent(runningEvent, log, null));\n    });\n  }\n\n  on(event, listener) {\n    this._addEventListener(this._getRunningEvent(event), listener, false);\n\n    return this;\n  }\n\n  once(event, listener) {\n    this._addEventListener(this._getRunningEvent(event), listener, true);\n\n    return this;\n  }\n\n  emit(eventName) {\n    if (!this.provider) {\n      return false;\n    }\n\n    const runningEvent = this._getRunningEvent(eventName);\n\n    for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n      args[_key6 - 1] = arguments[_key6];\n    }\n\n    const result = runningEvent.run(args) > 0; // May have drained all the \"once\" events; check for living events\n\n    this._checkRunningEvents(runningEvent);\n\n    return result;\n  }\n\n  listenerCount(eventName) {\n    if (!this.provider) {\n      return 0;\n    }\n\n    if (eventName == null) {\n      return Object.keys(this._runningEvents).reduce((accum, key) => {\n        return accum + this._runningEvents[key].listenerCount();\n      }, 0);\n    }\n\n    return this._getRunningEvent(eventName).listenerCount();\n  }\n\n  listeners(eventName) {\n    if (!this.provider) {\n      return [];\n    }\n\n    if (eventName == null) {\n      const result = [];\n\n      for (let tag in this._runningEvents) {\n        this._runningEvents[tag].listeners().forEach(listener => {\n          result.push(listener);\n        });\n      }\n\n      return result;\n    }\n\n    return this._getRunningEvent(eventName).listeners();\n  }\n\n  removeAllListeners(eventName) {\n    if (!this.provider) {\n      return this;\n    }\n\n    if (eventName == null) {\n      for (const tag in this._runningEvents) {\n        const runningEvent = this._runningEvents[tag];\n        runningEvent.removeAllListeners();\n\n        this._checkRunningEvents(runningEvent);\n      }\n\n      return this;\n    } // Delete any listeners\n\n\n    const runningEvent = this._getRunningEvent(eventName);\n\n    runningEvent.removeAllListeners();\n\n    this._checkRunningEvents(runningEvent);\n\n    return this;\n  }\n\n  off(eventName, listener) {\n    if (!this.provider) {\n      return this;\n    }\n\n    const runningEvent = this._getRunningEvent(eventName);\n\n    runningEvent.removeListener(listener);\n\n    this._checkRunningEvents(runningEvent);\n\n    return this;\n  }\n\n  removeListener(eventName, listener) {\n    return this.off(eventName, listener);\n  }\n\n}\nexport class Contract extends BaseContract {}\nexport class ContractFactory {\n  constructor(contractInterface, bytecode, signer) {\n    let bytecodeHex = null;\n\n    if (typeof bytecode === \"string\") {\n      bytecodeHex = bytecode;\n    } else if (isBytes(bytecode)) {\n      bytecodeHex = hexlify(bytecode);\n    } else if (bytecode && typeof bytecode.object === \"string\") {\n      // Allow the bytecode object from the Solidity compiler\n      bytecodeHex = bytecode.object;\n    } else {\n      // Crash in the next verification step\n      bytecodeHex = \"!\";\n    } // Make sure it is 0x prefixed\n\n\n    if (bytecodeHex.substring(0, 2) !== \"0x\") {\n      bytecodeHex = \"0x\" + bytecodeHex;\n    } // Make sure the final result is valid bytecode\n\n\n    if (!isHexString(bytecodeHex) || bytecodeHex.length % 2) {\n      logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n    } // If we have a signer, make sure it is valid\n\n\n    if (signer && !Signer.isSigner(signer)) {\n      logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n    }\n\n    defineReadOnly(this, \"bytecode\", bytecodeHex);\n    defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n    defineReadOnly(this, \"signer\", signer || null);\n  } // @TODO: Future; rename to populateTransaction?\n\n\n  getDeployTransaction() {\n    let tx = {}; // If we have 1 additional argument, we allow transaction overrides\n\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    if (args.length === this.interface.deploy.inputs.length + 1 && typeof args[args.length - 1] === \"object\") {\n      tx = shallowCopy(args.pop());\n\n      for (const key in tx) {\n        if (!allowedTransactionKeys[key]) {\n          throw new Error(\"unknown transaction override \" + key);\n        }\n      }\n    } // Do not allow these to be overridden in a deployment transaction\n\n\n    [\"data\", \"from\", \"to\"].forEach(key => {\n      if (tx[key] == null) {\n        return;\n      }\n\n      logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: key\n      });\n    });\n\n    if (tx.value) {\n      const value = BigNumber.from(tx.value);\n\n      if (!value.isZero() && !this.interface.deploy.payable) {\n        logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"overrides.value\",\n          value: tx.value\n        });\n      }\n    } // Make sure the call matches the constructor signature\n\n\n    logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\"); // Set the data to the bytecode + the encoded constructor arguments\n\n    tx.data = hexlify(concat([this.bytecode, this.interface.encodeDeploy(args)]));\n    return tx;\n  }\n\n  deploy() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    return __awaiter(this, void 0, void 0, function* () {\n      let overrides = {}; // If 1 extra parameter was passed in, it contains overrides\n\n      if (args.length === this.interface.deploy.inputs.length + 1) {\n        overrides = args.pop();\n      } // Make sure the call matches the constructor signature\n\n\n      logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\"); // Resolve ENS names and promises in the arguments\n\n      const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n      params.push(overrides); // Get the deployment transaction (with optional overrides)\n\n      const unsignedTx = this.getDeployTransaction(...params); // Send the deployment transaction\n\n      const tx = yield this.signer.sendTransaction(unsignedTx);\n      const address = getStatic(this.constructor, \"getContractAddress\")(tx);\n      const contract = getStatic(this.constructor, \"getContract\")(address, this.interface, this.signer); // Add the modified wait that wraps events\n\n      addContractWait(contract, tx);\n      defineReadOnly(contract, \"deployTransaction\", tx);\n      return contract;\n    });\n  }\n\n  attach(address) {\n    return this.constructor.getContract(address, this.interface, this.signer);\n  }\n\n  connect(signer) {\n    return new this.constructor(this.interface, this.bytecode, signer);\n  }\n\n  static fromSolidity(compilerOutput, signer) {\n    if (compilerOutput == null) {\n      logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, {\n        argument: \"compilerOutput\"\n      });\n    }\n\n    if (typeof compilerOutput === \"string\") {\n      compilerOutput = JSON.parse(compilerOutput);\n    }\n\n    const abi = compilerOutput.abi;\n    let bytecode = null;\n\n    if (compilerOutput.bytecode) {\n      bytecode = compilerOutput.bytecode;\n    } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n      bytecode = compilerOutput.evm.bytecode;\n    }\n\n    return new this(abi, bytecode, signer);\n  }\n\n  static getInterface(contractInterface) {\n    return Contract.getInterface(contractInterface);\n  }\n\n  static getContractAddress(tx) {\n    return getContractAddress(tx);\n  }\n\n  static getContract(address, contractInterface, signer) {\n    return new Contract(address, contractInterface, signer);\n  }\n\n}","map":{"version":3,"mappings":"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","names":["checkResultErrors","Indexed","Interface","Provider","Signer","VoidSigner","getAddress","getContractAddress","BigNumber","arrayify","concat","hexlify","isBytes","isHexString","defineReadOnly","deepCopy","getStatic","resolveProperties","shallowCopy","accessListify","Logger","version","logger","allowedTransactionKeys","chainId","data","from","gasLimit","gasPrice","nonce","to","value","type","accessList","maxFeePerGas","maxPriorityFeePerGas","customData","resolveName","resolver","nameOrPromise","name","throwArgumentError","error","throwError","errors","UNSUPPORTED_OPERATION","operation","address","resolveAddresses","paramType","Array","isArray","Promise","all","map","index","components","baseType","reject","makeError","INVALID_ARGUMENT","argument","v","arrayChildren","populateTransaction","contract","fragment","args","overrides","length","inputs","pop","checkArgumentCount","signer","override","then","check","__awaiter","provider","resolved","resolvedAddress","interface","encodeFunctionData","tx","ro","toNumber","gas","intrinsic","bytes","i","add","roValue","isZero","payable","leftovers","Object","keys","filter","key","l","JSON","stringify","join","buildPopulate","buildEstimate","signerOrProvider","estimateGas","addContractWait","wait","bind","confirmations","receipt","events","logs","log","event","parsed","parseLog","e","decode","topics","decodeEventLog","eventFragment","eventSignature","signature","removeListener","getBlock","blockHash","getTransaction","transactionHash","getTransactionReceipt","resolve","buildCall","collapseSimple","blockTag","undefined","push","deployTransaction","_deployed","result","call","decodeFunctionResult","outputs","code","CALL_EXCEPTION","transaction","buildSend","txRequest","sendTransaction","buildDefault","constant","getEventTag","topic","RunningEvent","constructor","tag","_listeners","addListener","listener","once","done","item","removeAllListeners","listeners","listenerCount","run","argsCopy","slice","setTimeout","apply","prepareEvent","getEmit","ErrorRunningEvent","FragmentRunningEvent","contractInterface","getEventTopic","format","decodeError","WildcardRunningEvent","BaseContract","addressOrName","checkNew","new","target","Contract","isSigner","isProvider","uniqueFilters","forEach","filters","encodeFilterTopics","warn","uniqueNames","uniqueSignatures","functions","callStatic","signatures","substring","getInterface","isInterface","deployed","_deployedPromise","getCode","contractAddress","fallback","connect","attach","isIndexed","_normalizeRunningEvent","runningEvent","_runningEvents","_getRunningEvent","eventName","getEvent","Error","_checkRunningEvents","emit","_wrappedEmits","off","_wrapEvent","_addEventListener","wrappedEmit","on","queryFilter","fromBlockOrBlockhash","toBlock","fromBlock","getLogs","reduce","accum","ContractFactory","bytecode","bytecodeHex","object","getDeployTransaction","deploy","encodeDeploy","params","unsignedTx","getContract","fromSolidity","compilerOutput","MISSING_ARGUMENT","parse","abi","evm"],"sourceRoot":"","sources":["../src.ts/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
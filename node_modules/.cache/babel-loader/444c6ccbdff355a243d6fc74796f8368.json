{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\nconst errorGas = [\"call\", \"estimateGas\"];\n\nfunction checkError(method, error, params) {\n  // Undo the \"convenience\" some nodes are attempting to prevent backwards\n  // incompatibility; maybe for v6 consider forwarding reverts as errors\n  if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n    const e = error.error;\n\n    if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n      return e.data;\n    }\n\n    logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n      error,\n      data: \"0x\"\n    });\n  }\n\n  let message = error.message;\n\n  if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof error.error.message === \"string\") {\n    message = error.error.message;\n  } else if (typeof error.body === \"string\") {\n    message = error.body;\n  } else if (typeof error.responseText === \"string\") {\n    message = error.responseText;\n  }\n\n  message = (message || \"\").toLowerCase();\n  const transaction = params.transaction || params.signedTransaction; // \"insufficient funds for gas * price + value + cost(data)\"\n\n  if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n    logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n      error,\n      method,\n      transaction\n    });\n  } // \"nonce too low\"\n\n\n  if (message.match(/nonce too low/)) {\n    logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n      error,\n      method,\n      transaction\n    });\n  } // \"replacement transaction underpriced\"\n\n\n  if (message.match(/replacement transaction underpriced/)) {\n    logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n      error,\n      method,\n      transaction\n    });\n  } // \"replacement transaction underpriced\"\n\n\n  if (message.match(/only replay-protected/)) {\n    logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n      error,\n      method,\n      transaction\n    });\n  }\n\n  if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n    logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n      error,\n      method,\n      transaction\n    });\n  }\n\n  throw error;\n}\n\nfunction timer(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\n\nfunction getResult(payload) {\n  if (payload.error) {\n    // @TODO: not any\n    const error = new Error(payload.error.message);\n    error.code = payload.error.code;\n    error.data = payload.error.data;\n    throw error;\n  }\n\n  return payload.result;\n}\n\nfunction getLowerCase(value) {\n  if (value) {\n    return value.toLowerCase();\n  }\n\n  return value;\n}\n\nconst _constructorGuard = {};\nexport class JsonRpcSigner extends Signer {\n  constructor(constructorGuard, provider, addressOrIndex) {\n    logger.checkNew(new.target, JsonRpcSigner);\n    super();\n\n    if (constructorGuard !== _constructorGuard) {\n      throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n    }\n\n    defineReadOnly(this, \"provider\", provider);\n\n    if (addressOrIndex == null) {\n      addressOrIndex = 0;\n    }\n\n    if (typeof addressOrIndex === \"string\") {\n      defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n      defineReadOnly(this, \"_index\", null);\n    } else if (typeof addressOrIndex === \"number\") {\n      defineReadOnly(this, \"_index\", addressOrIndex);\n      defineReadOnly(this, \"_address\", null);\n    } else {\n      logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n    }\n  }\n\n  connect(provider) {\n    return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"connect\"\n    });\n  }\n\n  connectUnchecked() {\n    return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n  }\n\n  getAddress() {\n    if (this._address) {\n      return Promise.resolve(this._address);\n    }\n\n    return this.provider.send(\"eth_accounts\", []).then(accounts => {\n      if (accounts.length <= this._index) {\n        logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"getAddress\"\n        });\n      }\n\n      return this.provider.formatter.address(accounts[this._index]);\n    });\n  }\n\n  sendUncheckedTransaction(transaction) {\n    transaction = shallowCopy(transaction);\n    const fromAddress = this.getAddress().then(address => {\n      if (address) {\n        address = address.toLowerCase();\n      }\n\n      return address;\n    }); // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n    // wishes to use this, it is easy to specify explicitly, otherwise\n    // we look it up for them.\n\n    if (transaction.gasLimit == null) {\n      const estimate = shallowCopy(transaction);\n      estimate.from = fromAddress;\n      transaction.gasLimit = this.provider.estimateGas(estimate);\n    }\n\n    if (transaction.to != null) {\n      transaction.to = Promise.resolve(transaction.to).then(to => __awaiter(this, void 0, void 0, function* () {\n        if (to == null) {\n          return null;\n        }\n\n        const address = yield this.provider.resolveName(to);\n\n        if (address == null) {\n          logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n        }\n\n        return address;\n      }));\n    }\n\n    return resolveProperties({\n      tx: resolveProperties(transaction),\n      sender: fromAddress\n    }).then(_ref => {\n      let {\n        tx,\n        sender\n      } = _ref;\n\n      if (tx.from != null) {\n        if (tx.from.toLowerCase() !== sender) {\n          logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n        }\n      } else {\n        tx.from = sender;\n      }\n\n      const hexTx = this.provider.constructor.hexlifyTransaction(tx, {\n        from: true\n      });\n      return this.provider.send(\"eth_sendTransaction\", [hexTx]).then(hash => {\n        return hash;\n      }, error => {\n        return checkError(\"sendTransaction\", error, hexTx);\n      });\n    });\n  }\n\n  signTransaction(transaction) {\n    return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"signTransaction\"\n    });\n  }\n\n  sendTransaction(transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // This cannot be mined any earlier than any recent block\n      const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval); // Send the transaction\n\n      const hash = yield this.sendUncheckedTransaction(transaction);\n\n      try {\n        // Unfortunately, JSON-RPC only provides and opaque transaction hash\n        // for a response, and we need the actual transaction, so we poll\n        // for it; it should show up very quickly\n        return yield poll(() => __awaiter(this, void 0, void 0, function* () {\n          const tx = yield this.provider.getTransaction(hash);\n\n          if (tx === null) {\n            return undefined;\n          }\n\n          return this.provider._wrapTransaction(tx, hash, blockNumber);\n        }), {\n          oncePoll: this.provider\n        });\n      } catch (error) {\n        error.transactionHash = hash;\n        throw error;\n      }\n    });\n  }\n\n  signMessage(message) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const data = typeof message === \"string\" ? toUtf8Bytes(message) : message;\n      const address = yield this.getAddress();\n      return yield this.provider.send(\"personal_sign\", [hexlify(data), address.toLowerCase()]);\n    });\n  }\n\n  _legacySignMessage(message) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const data = typeof message === \"string\" ? toUtf8Bytes(message) : message;\n      const address = yield this.getAddress(); // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n\n      return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n    });\n  }\n\n  _signTypedData(domain, types, value) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // Populate any ENS names (in-place)\n      const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, name => {\n        return this.provider.resolveName(name);\n      });\n      const address = yield this.getAddress();\n      return yield this.provider.send(\"eth_signTypedData_v4\", [address.toLowerCase(), JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))]);\n    });\n  }\n\n  unlock(password) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const provider = this.provider;\n      const address = yield this.getAddress();\n      return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n    });\n  }\n\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n  sendTransaction(transaction) {\n    return this.sendUncheckedTransaction(transaction).then(hash => {\n      return {\n        hash: hash,\n        nonce: null,\n        gasLimit: null,\n        gasPrice: null,\n        data: null,\n        value: null,\n        chainId: null,\n        confirmations: 0,\n        from: null,\n        wait: confirmations => {\n          return this.provider.waitForTransaction(hash, confirmations);\n        }\n      };\n    });\n  }\n\n}\n\nconst allowedTransactionKeys = {\n  chainId: true,\n  data: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true,\n  type: true,\n  accessList: true,\n  maxFeePerGas: true,\n  maxPriorityFeePerGas: true\n};\nexport class JsonRpcProvider extends BaseProvider {\n  constructor(url, network) {\n    logger.checkNew(new.target, JsonRpcProvider);\n    let networkOrReady = network; // The network is unknown, query the JSON-RPC for it\n\n    if (networkOrReady == null) {\n      networkOrReady = new Promise((resolve, reject) => {\n        setTimeout(() => {\n          this.detectNetwork().then(network => {\n            resolve(network);\n          }, error => {\n            reject(error);\n          });\n        }, 0);\n      });\n    }\n\n    super(networkOrReady); // Default URL\n\n    if (!url) {\n      url = getStatic(this.constructor, \"defaultUrl\")();\n    }\n\n    if (typeof url === \"string\") {\n      defineReadOnly(this, \"connection\", Object.freeze({\n        url: url\n      }));\n    } else {\n      defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n    }\n\n    this._nextId = 42;\n  }\n\n  get _cache() {\n    if (this._eventLoopCache == null) {\n      this._eventLoopCache = {};\n    }\n\n    return this._eventLoopCache;\n  }\n\n  static defaultUrl() {\n    return \"http:/\\/localhost:8545\";\n  }\n\n  detectNetwork() {\n    if (!this._cache[\"detectNetwork\"]) {\n      this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork(); // Clear this cache at the beginning of the next event loop\n\n      setTimeout(() => {\n        this._cache[\"detectNetwork\"] = null;\n      }, 0);\n    }\n\n    return this._cache[\"detectNetwork\"];\n  }\n\n  _uncachedDetectNetwork() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield timer(0);\n      let chainId = null;\n\n      try {\n        chainId = yield this.send(\"eth_chainId\", []);\n      } catch (error) {\n        try {\n          chainId = yield this.send(\"net_version\", []);\n        } catch (error) {}\n      }\n\n      if (chainId != null) {\n        const getNetwork = getStatic(this.constructor, \"getNetwork\");\n\n        try {\n          return getNetwork(BigNumber.from(chainId).toNumber());\n        } catch (error) {\n          return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            chainId: chainId,\n            event: \"invalidNetwork\",\n            serverError: error\n          });\n        }\n      }\n\n      return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n        event: \"noNetwork\"\n      });\n    });\n  }\n\n  getSigner(addressOrIndex) {\n    return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n  }\n\n  getUncheckedSigner(addressOrIndex) {\n    return this.getSigner(addressOrIndex).connectUnchecked();\n  }\n\n  listAccounts() {\n    return this.send(\"eth_accounts\", []).then(accounts => {\n      return accounts.map(a => this.formatter.address(a));\n    });\n  }\n\n  send(method, params) {\n    const request = {\n      method: method,\n      params: params,\n      id: this._nextId++,\n      jsonrpc: \"2.0\"\n    };\n    this.emit(\"debug\", {\n      action: \"request\",\n      request: deepCopy(request),\n      provider: this\n    }); // We can expand this in the future to any call, but for now these\n    // are the biggest wins and do not require any serializing parameters.\n\n    const cache = [\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0;\n\n    if (cache && this._cache[method]) {\n      return this._cache[method];\n    }\n\n    const result = fetchJson(this.connection, JSON.stringify(request), getResult).then(result => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        request: request,\n        response: result,\n        provider: this\n      });\n      return result;\n    }, error => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        error: error,\n        request: request,\n        provider: this\n      });\n      throw error;\n    }); // Cache the fetch, but clear it on the next event loop\n\n    if (cache) {\n      this._cache[method] = result;\n      setTimeout(() => {\n        this._cache[method] = null;\n      }, 0);\n    }\n\n    return result;\n  }\n\n  prepareRequest(method, params) {\n    switch (method) {\n      case \"getBlockNumber\":\n        return [\"eth_blockNumber\", []];\n\n      case \"getGasPrice\":\n        return [\"eth_gasPrice\", []];\n\n      case \"getBalance\":\n        return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n\n      case \"getTransactionCount\":\n        return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n\n      case \"getCode\":\n        return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n\n      case \"getStorageAt\":\n        return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n\n      case \"sendTransaction\":\n        return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n\n      case \"getBlock\":\n        if (params.blockTag) {\n          return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n        } else if (params.blockHash) {\n          return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n        }\n\n        return null;\n\n      case \"getTransaction\":\n        return [\"eth_getTransactionByHash\", [params.transactionHash]];\n\n      case \"getTransactionReceipt\":\n        return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n\n      case \"call\":\n        {\n          const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n          return [\"eth_call\", [hexlifyTransaction(params.transaction, {\n            from: true\n          }), params.blockTag]];\n        }\n\n      case \"estimateGas\":\n        {\n          const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n          return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, {\n            from: true\n          })]];\n        }\n\n      case \"getLogs\":\n        if (params.filter && params.filter.address != null) {\n          params.filter.address = getLowerCase(params.filter.address);\n        }\n\n        return [\"eth_getLogs\", [params.filter]];\n\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  perform(method, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // Legacy networks do not like the type field being passed along (which\n      // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n      if (method === \"call\" || method === \"estimateGas\") {\n        const tx = params.transaction;\n\n        if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n          // If there are no EIP-1559 properties, it might be non-EIP-a559\n          if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n            const feeData = yield this.getFeeData();\n\n            if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n              // Network doesn't know about EIP-1559 (and hence type)\n              params = shallowCopy(params);\n              params.transaction = shallowCopy(tx);\n              delete params.transaction.type;\n            }\n          }\n        }\n      }\n\n      const args = this.prepareRequest(method, params);\n\n      if (args == null) {\n        logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, {\n          operation: method\n        });\n      }\n\n      try {\n        return yield this.send(args[0], args[1]);\n      } catch (error) {\n        return checkError(method, error, params);\n      }\n    });\n  }\n\n  _startEvent(event) {\n    if (event.tag === \"pending\") {\n      this._startPending();\n    }\n\n    super._startEvent(event);\n  }\n\n  _startPending() {\n    if (this._pendingFilter != null) {\n      return;\n    }\n\n    const self = this;\n    const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n    this._pendingFilter = pendingFilter;\n    pendingFilter.then(function (filterId) {\n      function poll() {\n        self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n          if (self._pendingFilter != pendingFilter) {\n            return null;\n          }\n\n          let seq = Promise.resolve();\n          hashes.forEach(function (hash) {\n            // @TODO: This should be garbage collected at some point... How? When?\n            self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n            seq = seq.then(function () {\n              return self.getTransaction(hash).then(function (tx) {\n                self.emit(\"pending\", tx);\n                return null;\n              });\n            });\n          });\n          return seq.then(function () {\n            return timer(1000);\n          });\n        }).then(function () {\n          if (self._pendingFilter != pendingFilter) {\n            self.send(\"eth_uninstallFilter\", [filterId]);\n            return;\n          }\n\n          setTimeout(function () {\n            poll();\n          }, 0);\n          return null;\n        }).catch(error => {});\n      }\n\n      poll();\n      return filterId;\n    }).catch(error => {});\n  }\n\n  _stopEvent(event) {\n    if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n      this._pendingFilter = null;\n    }\n\n    super._stopEvent(event);\n  } // Convert an ethers.js transaction into a JSON-RPC transaction\n  //  - gasLimit => gas\n  //  - All values hexlified\n  //  - All numeric values zero-striped\n  //  - All addresses are lowercased\n  // NOTE: This allows a TransactionRequest, but all values should be resolved\n  //       before this is called\n  // @TODO: This will likely be removed in future versions and prepareRequest\n  //        will be the preferred method for this.\n\n\n  static hexlifyTransaction(transaction, allowExtra) {\n    // Check only allowed properties are given\n    const allowed = shallowCopy(allowedTransactionKeys);\n\n    if (allowExtra) {\n      for (const key in allowExtra) {\n        if (allowExtra[key]) {\n          allowed[key] = true;\n        }\n      }\n    }\n\n    checkProperties(transaction, allowed);\n    const result = {}; // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.\n\n    [\"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n      if (transaction[key] == null) {\n        return;\n      }\n\n      const value = hexValue(transaction[key]);\n\n      if (key === \"gasLimit\") {\n        key = \"gas\";\n      }\n\n      result[key] = value;\n    });\n    [\"from\", \"to\", \"data\"].forEach(function (key) {\n      if (transaction[key] == null) {\n        return;\n      }\n\n      result[key] = hexlify(transaction[key]);\n    });\n\n    if (transaction.accessList) {\n      result[\"accessList\"] = accessListify(transaction.accessList);\n    }\n\n    return result;\n  }\n\n}","map":{"version":3,"mappings":"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","names":["Signer","BigNumber","hexlify","hexValue","isHexString","_TypedDataEncoder","checkProperties","deepCopy","defineReadOnly","getStatic","resolveProperties","shallowCopy","toUtf8Bytes","accessListify","fetchJson","poll","Logger","version","logger","BaseProvider","errorGas","checkError","method","error","params","code","errors","SERVER_ERROR","e","message","match","data","throwError","CALL_EXCEPTION","body","responseText","toLowerCase","transaction","signedTransaction","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","UNSUPPORTED_OPERATION","indexOf","UNPREDICTABLE_GAS_LIMIT","timer","timeout","Promise","resolve","setTimeout","getResult","payload","Error","result","getLowerCase","value","_constructorGuard","JsonRpcSigner","constructor","constructorGuard","provider","addressOrIndex","checkNew","new","target","formatter","address","throwArgumentError","connect","operation","connectUnchecked","UncheckedJsonRpcSigner","_address","_index","getAddress","send","then","accounts","length","sendUncheckedTransaction","fromAddress","gasLimit","estimate","from","estimateGas","to","__awaiter","resolveName","tx","sender","hexTx","hexlifyTransaction","hash","signTransaction","sendTransaction","blockNumber","_getInternalBlockNumber","pollingInterval","getTransaction","undefined","_wrapTransaction","oncePoll","transactionHash","signMessage","_legacySignMessage","_signTypedData","domain","types","populated","resolveNames","name","JSON","stringify","getPayload","unlock","password","nonce","gasPrice","chainId","confirmations","wait","waitForTransaction","allowedTransactionKeys","type","accessList","maxFeePerGas","maxPriorityFeePerGas","JsonRpcProvider","url","network","networkOrReady","reject","detectNetwork","Object","freeze","_nextId","_cache","_eventLoopCache","defaultUrl","_uncachedDetectNetwork","getNetwork","toNumber","NETWORK_ERROR","event","serverError","getSigner","getUncheckedSigner","listAccounts","map","a","request","id","jsonrpc","emit","action","cache","connection","response","prepareRequest","blockTag","position","includeTransactions","blockHash","filter","perform","isZero","feeData","getFeeData","args","NOT_IMPLEMENTED","_startEvent","tag","_startPending","_pendingFilter","self","pendingFilter","filterId","hashes","seq","forEach","_emitted","catch","_stopEvent","listenerCount","allowExtra","allowed","key"],"sourceRoot":"","sources":["../src.ts/json-rpc-provider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}